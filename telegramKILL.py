from colorama import Fore, Style, init
import random
import string
import smtplib
from email.mime.text import MIMEText
from email.mime.multipart import MIMEMultipart
import time
import requests
from telethon.sync import TelegramClient
from telethon.tl.functions.channels import ReportSpamRequest
import pyfiglet
from termcolor import colored

#softbyAlternativeHospital
#разшифровал ебаный гей

a=input("Введи текстовый пароль для запуска программы:")
if a!="base64":
	print(colored(f"Пароль не верен! Завершаю работу программы! ", 'red'))
	print(colored(f"Уточни его у создателей", 'red'))
	exit()
else:
	print(colored(f"Пароль верен! Запускаю работу программы!", 'green'))

# ASCII-арт приветствия
ascii_banner = pyfiglet.figlet_format("Web Snoser")
colored_banner = colored(ascii_banner, color='magenta')  # Красим в цвет
print(colored_banner)

print(Fore.MAGENTA + "————————————————————————————————————————————————————————")

print(Fore.GREEN + "Цена: 500₽")
print(Fore.GREEN + "Сносит за 4 часа")
senders = {
    'raumonatuhadi@mail.ru': 'a7r6U9J6KHDaguAsidDH',
    'floworadpewoodvi@mail.ru': 'ZcyUg5MUq8jMr9i8aST1',
    'letzegebquirdisnui@mail.ru': 'abniAcbrCjRskpysMc75',
    'millveramontmoni@mail.ru': 'bLd8Zg4tqfxmUq7KW5jW',
    'letkixipromnussi@mail.ru': 'bNraxddiagE9Sx23SxYt',
    'hotriosmartraverba@mail.ru': 'cALqh0bjnPefyiu7WL0v',
    'pillgemisscritcomsa@mail.ru': 'dHBUrMg6aqXhvx0m1cVf',
    'leigedeamvebig@mail.ru': 'dVTsGqDbZYbjse9iHNR2',
    'knocrufridunringgent@mail.ru': 'dn333DbbuEfGnqw08Rxm',
    'tworensodiapansaa@mail.ru': 'dsGajJE1TtiAGgZsgyvQ',
    'korlithiobtennick@mail.ru': 'feDLSiueGT89APb81v74',
    'terbgebuoviror@mail.ru': 'gaqaKs06xg22kkXXW2LU',
    'tioreibunthandvahear@mail.ru': 'ggKygTjxSLzwm4tWd43B',
    'avyavya.vyaavy@mail.ru': 'zmARvx1MRvXppZV6xkXj',
    'gdfds98@mail.ru': '1CtFuHTaQxNda8X06CaQ',
    'dfsdfdsfdf51@mail.ru': 'SXxrCndCR59s5G9sGc6L',
    'aria.therese.svensson@mail.com': 'Zorro1ab',
    'taterbug@verizon.net': 'Holly1!',
    'ejbrickner@comcast.net': 'Pass1178',
    'teressapeart@cox.net': 'Quinton2329!',
    'liznees@verizon.net': 'Dancer008',
    'olajakubovich@mail.com': 'OlaKub2106OlaKub2106',
    'kcdg@charter.net': 'Jennifer3*',
    'bean_118@hotmail.com': 'Liverpool118!',
    'dsdhjas@mail.com': 'LONGHACH123',
    'robitwins@comcast.net': 'May241996',
    'wasina@live.com': 'Marlas21',
    'aruzhan.01@mail.com': '1234567!',
    'rob.tackett@live.com': 'metallic',
    'lindahallenbeck@verizon.net': 'Anakin@2014',
    'hlaw82@mail.com': 'Snoopy37$$',
    'paintmadman@comcast.net': 'mycat2200*',
    'prideandjoy@verizon.net': 'Ihatejen12',
    'sdgdfg56@mail.com': 'kenwood4201',
    'garrett.danelz@comcast.net': 'N11golfer!',
    'gillian_1211@hotmail.com': 'Gilloveu1211',
    'sunpit16@hotmail.com': 'Putter34!',
    'fdshelor@verizon.net': 'Masco123*',
    'yeags1@cox.net': 'Zoomom1965!',
    'amine002@usa.com': 'iScrRoXAei123',
    'bbarcelo16@cox.net': 'Bsb161089$$',
    'laliebert@hotmail.com': 'pirates2',
    'vallen285@comcast.net': 'Delft285!1!',
    'sierra12@email.com': 'tegen1111',
    'luanne.zapevalova@mail.com': 'FqWtJdZ5iN@',
    'kmay@windstream.net': 'Nascar98',
    'redbrick1@mail.com': 'Redbrick11',
    'ivv9ah7f@mail.com': 'K226nw8duwg',
    'erkobir@live.com': 'floydLAWTON019',
    'Misscarter@mail.com': 'ashtray19',
    'carlieruby10@cox.net': 'Lollypop789$',
    'blackops2013@mail.com': 'amason123566',
    'caroline_cullum@comcast.net': 'carter14',
    'dpb13@live.com': 'Ic&ynum13',
    'heirhunter@usa.com': 'Noguys@714',
    'sherri.edwards@verizon.net': 'Dreaming123#',
    'rami.rami1980@hotmail.com': 'ramirami1980',
    'jmsingleton2@comcast.net': '151728Jn$$',
    'aberancho@aol.com': '10diegguuss10',
    'dgidel@iowatelecom.net': 'Buster48',
    'gpopandopul@mail.com': 'GEORG62A',
    'bolgodonsk@mail.com': '012345678!',
    'colbycolb@cox.net': 'Signals@1',
    'nicrey4@comcast.net': 'Dabears54',
    'mordechai@mail.com': 'Mordechai',
    'inemrzoya@mail.com': 'rLS1elaUrLS1elaU',
    'tarabedford@comcast.net': 'Money4me',
    'mycockneedsit@mail.com': 'benjamin3',
    'saralaine@mail.com': 'sarlaine12!1',
    'jonb2006@verizon.net': '1969Camaro',
    'rjhssa1@verizon.net': 'Donna613*',
    'cameron.doug@charter.net': 'Jake2122$',
    'bridget.shappell@comcast.net': 'Brennan1',
    'rugs8@comcast.net': 'baseball46',
    'averyjacobs3@mail.com': '1960682644!',
    'lstefanick@hotmail.com': 'Luv2dance2',
    'bchavez123@mail.com': 'aadrianachavez',
    'lukejamesjones@mail.com': 'tinkerbell1',
    'emahoney123@comcast.net': 'Shieknmme3#',
    'mandy10.mcevoy@btinternet.com': 'Tr1plets3',
    'jet747@cox.net': 'Sadie@1234',
    'landsgascareservices@mail.com': 'Alisha25@',
    'samantha224@mail.com': 'Madden098!@',
    'kbhamil@wowway.com': 'Carol1940',
    'email@bjasper.com': 'Lhsnh4us123!',
    'biggsbrian@cox.net': 'Trains@2247Trains@2247',
    'dzzeblnd@aol.com': 'Geosgal@1',
    'jtrego@indy.rr.com': 'Jackwill14!',
    'chrisphonte.rj@comcast.net': 'Junior@3311',
    'tvwifiguy@comcast.net': 'Bill#0101',
    'defenestrador@mail.com': 'm0rb1d8ss',
    'glangley@gmx.com': 'ironhide',
    'charlotte2850@hotmail.com': 'kelalu2850'
}
# \xd0\x9f\xd0\xbe\xd0\xbb\xd1\x83\xd1\x87\xd0\xb0\xd1\x82\xd0\xb5\xd0\xbb\xd0\xb8
receivers = ['sms@telegram.org', 'dmca@telegram.org', 'abuse@telegram.org',
             'sticker@telegram.org', 'support@telegram.org']


def decode(q: bytes):
    return q.decode()


def print_logo():
    logo =[]
    print("")
    green_color = "\\033[32m"  # \xd0\x97\xd0\xb5\xd0\xbb\xd0\xb5\xd0\xbd\xd1\x8b\xd0\xb9 \xd1\x86\xd0\xb2\xd0\xb5\xd1\x82 ANSI escape \xd0\xba\xd0\xbe\xd0\xb4
    reset_color = "\\033[0m"   # \xd0\xa1\xd0\xb1\xd1\x80\xd0\xbe\xd1\x81 \xd1\x86\xd0\xb2\xd0\xb5\xd1\x82\xd0\xb0 ANSI escape \xd0\xba\xd0\xbe\xd0\xb4

    for line in logo:
        print(green_color + line + reset_color)


def print_menu():
    print(decode(b"\xd0\x9c\xd0\xb5\xd0\xbd\xd1\x8e: "))
    print(decode(b"1.\xd0\xa1\xd0\xbd\xd0\xbe\xd1\x81 \xd0\xb0\xd0\xba\xd0\xba\xd0\xb0\xd1\x83\xd0\xbd\xd1\x82\xd0\xb0"))
    print(decode(b"2.\xd0\xa1\xd0\xbd\xd0\xbe\xd1\x81 \xd0\xba\xd0\xb0\xd0\xbd\xd0\xb0\xd0\xbb\xd0\xb0"))
    print(decode(b"3.\xd0\xa1\xd0\xbd\xd0\xbe\xd1\x81 \xd0\xb1\xd0\xbe\xd1\x82\xd0\xbe\xd0\xb2"))
    print(decode(b"4.\xd0\xa1\xd0\xbe\xd0\xb7\xd0\xb4\xd0\xb0\xd1\x82\xd0\xb5\xd0\xbb\xd0\xb8"))


def send_email(receiver, sender_email, sender_password, subject, body):
    try:
        msg = MIMEMultipart()
        msg['From'] = sender_email
        msg['To'] = receiver
        msg['Subject'] = subject
        msg.attach(MIMEText(body, 'plain'))

        server = smtplib.SMTP('smtp.mail.ru', 587)
        server.starttls()
        server.login(sender_email, sender_password)
        server.sendmail(sender_email, receiver, msg.as_string())
        time.sleep(3)
        server.quit()
        return True
    except Exception:
        return False


def handle_complaint(senders, receivers):
    global complaint_type
    sent_emails = 0
    print_logo()
    print_menu()
    choice = input(decode(b"\xd0\x92\xd1\x8b\xd0\xb1\xd0\xbe\xd1\x80:"))
    complaint_type = ""

    if choice == "1":

        print(decode(b"\xd0\x92\xd1\x8b\xd0\xb1\xd0\xb5\xd1\x80\xd0\xb8\xd1\x82\xd0\xb5 \xd1\x82\xd0\xb8\xd0\xbf \xd0\xb6\xd0\xb0\xd0\xbb\xd0\xbe\xd0\xb1\xd1\x8b:"))
        print(decode(b"1.1 \xd0\x9e\xd0\xb1\xd1\x8b\xd1\x87\xd0\xbd\xd1\x8b\xd0\xb9"))
        print(decode(b"1.2 \xd0\xa1\xd0\xbd\xd0\xbe\xd1\x81 \xd1\x81\xd0\xb5\xd1\x81\xd1\x81\xd0\xb8\xd0\xb9"))
        print(decode(b"1.3 \xd0\xa1\xd0\xbd\xd0\xbe\xd1\x81 \xd1\x82\xd1\x80\xd0\xbe\xd0\xbb\xd0\xbb\xd0\xb5\xd0\xb9"))
        
        complaint_choice = input(decode(b"\xd0\x92\xd0\xb0\xd1\x88 \xd0\xb2\xd1\x8b\xd0\xb1\xd0\xbe\xd1\x80: "))

        if complaint_choice == "1.1":
            print(decode(b"\xd0\x92\xd0\xb2\xd0\xb5\xd0\xb4\xd0\xb8\xd1\x82\xd0\xb5 \xd0\xbf\xd1\x80\xd0\xb8\xd1\x87\xd0\xb8\xd0\xbd\xd1\x83, \xd1\x8e\xd0\xb7\xd0\xb5\xd1\x80\xd0\xbd\xd0\xb5\xd0\xb9\xd0\xbc, telegram ID, \xd0\xb7\xd0\xb0\xd1\x82\xd0\xb5\xd0\xbc \xd1\x81\xd1\x81\xd1\x8b\xd0\xbb\xd0\xba\xd0\xb8 \xd0\xbd\xd0\xb0 \xd0\xba\xd0\xb0\xd0\xbd\xd0\xb0\xd0\xbb/\xd1\x87\xd0\xb0\xd1\x82 \xd0\xb8 \xd0\xbd\xd0\xb0 \xd0\xbd\xd0\xb0\xd1\x80\xd1\x83\xd1\x88\xd0\xb5\xd0\xbd\xd0\xb8\xd0\xb5"))
            reason = input(decode(b"\xd0\x9f\xd1\x80\xd0\xb8\xd1\x87\xd0\xb8\xd0\xbd\xd0\xb0: "))
            username = input(decode(b"\xd0\xae\xd0\xb7\xd0\xb5\xd1\x80\xd0\xbd\xd0\xb5\xd0\xb9\xd0\xbc: "))
            telegram_ID = input("Telegram ID: ")
            chat_link = input(decode(b"\xd0\xa1\xd1\x81\xd1\x8b\xd0\xbb\xd0\xba\xd0\xb0 \xd0\xbd\xd0\xb0 \xd1\x87\xd0\xb0\xd1\x82: "))
            violation_chat_link = input(decode(b"\xd0\xa1\xd1\x81\xd1\x8b\xd0\xbb\xd0\xba\xd0\xb0 \xd0\xbd\xd0\xb0 \xd0\xbd\xd0\xb0\xd1\x80\xd1\x83\xd1\x88\xd0\xb5\xd0\xbd\xd0\xb8\xd0\xb5: "))

            complaint_texts = {
                "1.1": f"Здравствуйте, уважаемая поддержка, в вашей сети я нашел телеграм аккаунт, который нарушает ваши правила, такие как {reason}. Его юзернейм - {username}, так же его контактный ID - {telegram_ID}. Ссылка на чат с нарушениями - {chat_link}, ссылки на нарушения - {violation_chat_link}. Спасибо за помощь."
            }

            for sender_email, sender_password in senders.items():
                for receiver_email in receivers:
                    complaint_text = complaint_texts[complaint_choice]
                    complaint_body = complaint_text.format(reason=reason.strip(), username=username.strip(), telegram_ID=telegram_ID.strip(), chat_link=chat_link.strip(), violation_chat_link=violation_chat_link.strip())
                    send_email(receiver_email, sender_email, sender_password, decode(b"\xd0\x96\xd0\xb0\xd0\xbb\xd0\xbe\xd0\xb1\xd0\xb0 \xd0\xbd\xd0\xb0 Telegram \xd0\xb0\xd0\xba\xd0\xba\xd0\xb0\xd1\x83\xd0\xbd\xd1\x82"), complaint_body)
                    print(f"Отправлено на {receiver_email} от {sender_email}!")
                    sent_emails += 1

        elif complaint_choice == "1.2":
            account_username = input(decode(b"\xd0\xae\xd0\xb7\xd0\xb5\xd1\x80\xd0\xbd\xd0\xb5\xd0\xb9\xd0\xbc: "))
            Telegram_account_ID = input("Telegram ID: ")

            complaint_texts = {
                "1.2": f"Здравствуйте, я утерял свой телеграм-аккаунт путем взлома. Я попался на фишинговую ссылку, и теперь на моем аккаунте сидит какой-то человек. Он установил облачный пароль, так что я не могу зайти в свой аккаунт и прошу о помощи. Мой юзернейм — {account_username}, а мой айди, если злоумышленник поменял юзернейм — {Telegram_account_ID}. Пожалуйста, перезагрузите сессии или удалите этот аккаунт, так как у меня там очень много важных данных."
            }

            for sender_email, sender_password in senders.items():
                for receiver_email in receivers:
                    complaint_text = complaint_texts[complaint_choice]
                    complaint_body = complaint_text.format(account_username=account_username.strip(), Telegram_account_ID=Telegram_account_ID.strip())
                    send_email(receiver_email, sender_email, sender_password, decode(b"\xd0\xaf \xd1\x83\xd1\x82\xd0\xb5\xd1\x80\xd1\x8f\xd0\xbb \xd1\x81\xd0\xb2\xd0\xbe\xd0\xb9 \xd1\x82\xd0\xb5\xd0\xbb\xd0\xb5\xd0\xb3\xd1\x80\xd0\xb0\xd0\xbc-\xd0\xb0\xd0\xba\xd0\xba\xd0\xb0\xd1\x83\xd0\xbd\xd1\x82"), complaint_body)
                    print(f"Отправлено на {receiver_email} от {sender_email}!")

        elif complaint_choice == "1.3":
            account_username = input(decode(b"\xd0\xae\xd0\xb7\xd0\xb5\xd1\x80\xd0\xbd\xd0\xb5\xd0\xb9\xd0\xbc: "))
            chat_link = input(decode(b"\xd0\x92\xd0\xb2\xd0\xb5\xd0\xb4\xd0\xb8\xd1\x82\xd0\xb5 \xd1\x81\xd1\x81\xd1\x8b\xd0\xbb\xd0\xba\xd1\x83 \xd0\xbd\xd0\xb0 \xd1\x87\xd0\xb0\xd1\x82: "))
            violation_chat_link = input(decode(b"\xd0\xb2\xd0\xb2\xd0\xb5\xd0\xb4\xd0\xb8\xd1\x82\xd0\xb5 \xd1\x81\xd1\x81\xd1\x8b\xd0\xbb\xd0\xba\xd1\x83 \xd0\xbd\xd0\xb0 \xd0\xbd\xd0\xb0\xd1\x80\xd1\x83\xd1\x88\xd0\xb5\xd0\xbd\xd0\xb8\xd0\xb5 \xd0\xb2 \xd1\x87\xd0\xb0\xd1\x82\xd0\xb5: "))
            
            complaint_texts = {
                "1.3": "Hello! Dear Telegram support! want to report a user {account_username} the fact is that he insults people proofs: {chat_link} {violation_chat_link} !"
            }
            for sender_email, sender_password in senders.items():
                for receiver_email in receivers:
                    complaint_text = complaint_texts[complaint_choice]
                    complaint_body = complaint_text.format(account_username=account_username.strip(), chat_link=chat_link.strip(), violation_chat_link=violation_chat_link.strip())
                    send_email(receiver_email, sender_email, sender_password, decode(b"\xd0\x96\xd0\xb0\xd0\xbb\xd0\xbe\xd0\xb1\xd0\xb0 \xd0\xbd\xd0\xb0 Telegram \xd0\xb0\xd0\xba\xd0\xba\xd0\xb0\xd1\x83\xd0\xbd\xd1\x82"), complaint_body)
                    print(colored(f"Жалоба успешно отправлена от {sender_email}!", 'green'))

    elif choice == "4":
        print(colored(f"Создатель: @paradoxup ; Канал: @websnoser. Цена данного сносера: 500₽ Купить можно у @paradoxup", 'cyan'))
        return
                            
    elif choice == "2":
        print(decode(b"\xd0\x92\xd1\x8b\xd0\xb1\xd0\xb5\xd1\x80\xd0\xb8\xd1\x82\xd0\xb5 \xd1\x82\xd0\xb8\xd0\xbf \xd0\xb6\xd0\xb0\xd0\xbb\xd0\xbe\xd0\xb1\xd1\x8b:"))
        print(decode(b"8. \xd0\x9b\xd0\xb8\xd1\x87\xd0\xbd\xd1\x8b\xd0\xb5 \xd0\xb4\xd0\xb0\xd0\xbd\xd0\xbd\xd1\x8b\xd0\xb5"))
        print(decode(b"9. \xd0\x94\xd0\xbb\xd1\x8f \xd0\xbf\xd1\x80\xd0\xb0\xd0\xb9\xd1\x81\xd0\xbe\xd0\xb2"))
        print(decode(b"10. \xd0\x94\xd0\xbb\xd1\x8f \xd0\xb3\xd0\xb5\xd0\xb9\xd0\xbc\xd0\xbe\xd0\xb2"))
        print(decode(b"11. \xd0\xa6\xd0\x9f"))
        print(decode(b"12. \xd0\xa1\xd0\xba\xd0\xb0\xd0\xbc"))
        print(decode(b"13. \xd0\x9f\xd1\x80\xd0\xbe\xd0\xb4\xd0\xb0\xd0\xb6\xd0\xb0 \xd0\xb2\xd0\xb8\xd1\x80\xd1\x82 \xd0\xbd\xd0\xbe\xd0\xbc\xd0\xb5\xd1\x80\xd0\xbe\xd0\xb2"))
        print(decode(b"14. \xd0\xa0\xd0\xb0\xd1\x81\xd1\x87\xd0\xbb\xd0\xb5\xd0\xbd\xd0\xb5\xd0\xbd\xd0\xba\xd0\xb0"))
        print(decode(b"15. \xd0\x96\xd0\xb8\xd0\xb2\xd0\xbe\xd0\xb4\xd0\xb5\xd1\x80\xd1\x81\xd1\x82\xd0\xb2\xd0\xbe"))
        complaint_type = input(decode(b"\xd0\x92\xd1\x8b\xd0\xb1\xd0\xbe\xd1\x80: "))

        complaint_types = {
            "8": [decode(b"\xd0\x97\xd0\xb4\xd1\x80\xd0\xb0\xd0\xb2\xd1\x81\xd1\x82\xd0\xb2\xd1\x83\xd0\xb9\xd1\x82\xd0\xb5, \xd0\xbf\xd0\xbe\xd0\xb4\xd0\xb4\xd0\xb5\xd1\x80\xd0\xb6\xd0\xba\xd0\xb0 \xd0\xa2\xd0\xb5\xd0\xbb\xd0\xb5\xd0\xb3\xd1\x80\xd0\xb0\xd0\xbc! \xd0\x92 \xd0\xb2\xd0\xb0\xd1\x88\xd0\xb5\xd0\xb9 \xd1\x81\xd0\xbe\xd1\x86\xd0\xb8\xd0\xb0\xd0\xbb\xd1\x8c\xd0\xbd\xd0\xbe\xd0\xb9 \xd1\x81\xd0\xb5\xd1\x82\xd0\xb8 \xd1\x8f \xd0\xbd\xd0\xb0\xd1\x88\xd0\xb5\xd0\xbb \xd0\xba\xd0\xb0\xd0\xbd\xd0\xb0\xd0\xbb, \xd0\xb2 \xd0\xba\xd0\xbe\xd1\x82\xd0\xbe\xd1\x80\xd0\xbe\xd0\xbc \xd0\xbf\xd1\x83\xd0\xb1\xd0\xbb\xd0\xb8\xd0\xba\xd1\x83\xd1\x8e\xd1\x82\xd1\x81\xd1\x8f \xd0\xbb\xd0\xb8\xd1\x87\xd0\xbd\xd1\x8b\xd0\xb5 \xd0\xb4\xd0\xb0\xd0\xbd\xd0\xbd\xd1\x8b\xd0\xb5 \xd0\xbd\xd0\xb5\xd0\xb2\xd0\xb8\xd0\xbd\xd0\xbd\xd1\x8b\xd1\x85 \xd0\xbb\xd1\x8e\xd0\xb4\xd0\xb5\xd0\xb9. \xd0\xa1\xd1\x81\xd1\x8b\xd0\xbb\xd0\xba\xd0\xb0 \xd0\xbd\xd0\xb0 \xd0\xba\xd0\xb0\xd0\xbd\xd0\xb0\xd0\xbb - {channel_link} . \xd0\xa1\xd1\x81\xd1\x8b\xd0\xbb\xd0\xba\xd0\xb0 \xd0\xbd\xd0\xb0 \xd0\xbd\xd0\xb0\xd1\x80\xd1\x83\xd1\x88\xd0\xb5\xd0\xbd\xd0\xb8\xd0\xb5 - {violation_link} . \xd0\x9f\xd1\x80\xd0\xbe\xd1\x81\xd1\x8c\xd0\xb1\xd0\xb0 \xd1\x83\xd0\xb4\xd0\xb0\xd0\xbb\xd0\xb8\xd1\x82\xd1\x8c \xd0\xb4\xd0\xb0\xd0\xbd\xd0\xbd\xd1\x8b\xd0\xb9 \xd0\xba\xd0\xb0\xd0\xbd\xd0\xb0\xd0\xbb \xd1\x81 \xd0\xb2\xd0\xb0\xd1\x88\xd0\xb5\xd0\xb9 \xd0\xbf\xd0\xbb\xd0\xbe\xd1\x89\xd0\xb0\xd0\xb4\xd0\xba\xd0\xb8"), "Hello, Telegram support team! I have found a channel on your social network where personal data of innocent people is being published. The link to the channel is {channel_link}. The link to the violation is {violation_link}. Please remove this channel from your platform"],
            "9": [decode(b"\xd0\x97\xd0\xb4\xd1\x80\xd0\xb0\xd0\xb2\xd1\x81\xd1\x82\xd0\xb2\xd1\x83\xd0\xb9\xd1\x82\xd0\xb5,\xd1\x83\xd0\xb2\xd0\xb0\xd0\xb6\xd0\xb0\xd0\xb5\xd0\xbc\xd1\x8b\xd0\xb9 \xd0\xbc\xd0\xbe\xd0\xb4\xd0\xb5\xd1\x80\xd0\xb0\xd1\x82\xd0\xbe\xd1\x80 \xd1\x82\xd0\xb5\xd0\xbb\xd0\xb5\xd0\xb3\xd1\x80\xd0\xb0\xd0\xbc\xd0\xbc,\xd1\x85\xd0\xbe\xd1\x87\xd1\x83 \xd0\xbf\xd0\xbe\xd0\xb6\xd0\xb0\xd0\xbb\xd0\xbe\xd0\xb2\xd0\xb0\xd1\x82\xd1\x8c\xd1\x81\xd1\x8f \xd0\xb2\xd0\xb0\xd0\xbc \xd0\xbd\xd0\xb0 \xd0\xba\xd0\xb0\xd0\xbd\xd0\xb0\xd0\xbb,\xd0\xba\xd0\xbe\xd1\x82\xd0\xbe\xd1\x80\xd1\x8b\xd0\xb9 \xd0\xbf\xd1\x80\xd0\xbe\xd0\xb4\xd0\xb0\xd0\xb5\xd1\x82 \xd1\x83\xd1\x81\xd0\xbb\xd1\x83\xd0\xb3\xd0\xb8 \xd0\xb4\xd0\xbe\xd0\xba\xd1\x81\xd0\xb8\xd0\xbd\xd0\xb3\xd0\xb0, \xd1\x81\xd0\xb2\xd0\xb0\xd1\x82\xd1\x82\xd0\xb8\xd0\xbd\xd0\xb3\xd0\xb0. \xd0\xa1\xd1\x81\xd1\x8b\xd0\xbb\xd0\xba\xd0\xb0 \xd0\xbd\xd0\xb0 \xd1\x82\xd0\xb5\xd0\xbb\xd0\xb5\xd0\xb3\xd1\x80\xd0\xb0\xd0\xbc\xd0\xbc \xd0\xba\xd0\xb0\xd0\xbd\xd0\xb0\xd0\xbb:{channel_link} \xd0\xa1\xd1\x81\xd1\x8b\xd0\xbb\xd0\xba\xd0\xb0 \xd0\xbd\xd0\xb0 \xd0\xbd\xd0\xb0\xd1\x80\xd1\x83\xd1\x88\xd0\xb5\xd0\xbd\xd0\xb8\xd0\xb5:{violation_link} \xd0\x9f\xd1\x80\xd0\xbe\xd1\x81\xd1\x8c\xd0\xb1\xd0\xb0 \xd0\xb7\xd0\xb0\xd0\xb1\xd0\xbb\xd0\xbe\xd0\xba\xd0\xb8\xd1\x80\xd0\xbe\xd0\xb2\xd0\xb0\xd1\x82\xd1\x8c \xd0\xb4\xd0\xb0\xd0\xbd\xd0\xbd\xd1\x8b\xd0\xb9 \xd0\xba\xd0\xb0\xd0\xbd\xd0\xb0\xd0\xbb."), "Hello, dear Telegram moderator,I would like to file a complaint regarding a channel on your platform that is selling doxxing and swatting services. Here are the details: Telegram channel link: {channel_link} Violation link: {violation_link} Please block this channel."],
            "10": ["Hello dear Telegram support! Please block the {channel_link} channel The channel threatens to shoot children in schools and commit terrorist attacks, you can see it here {violation_link} Thank you in advance", decode(b"\xd0\x97\xd0\xb4\xd1\x80\xd0\xb0\xd0\xb2\xd1\x81\xd1\x82\xd0\xb2\xd1\x83\xd0\xb9\xd1\x82\xd0\xb5, \xd1\x83\xd0\xb2\xd0\xb0\xd0\xb6\xd0\xb0\xd0\xb5\xd0\xbc\xd0\xb0\xd1\x8f \xd0\xbf\xd0\xbe\xd0\xb4\xd0\xb4\xd0\xb5\xd1\x80\xd0\xb6\xd0\xba\xd0\xb0 Telegram! \xd0\x9f\xd0\xbe\xd0\xb6\xd0\xb0\xd0\xbb\xd1\x83\xd0\xb9\xd1\x81\xd1\x82\xd0\xb0, \xd0\xb7\xd0\xb0\xd0\xb1\xd0\xbb\xd0\xbe\xd0\xba\xd0\xb8\xd1\x80\xd1\x83\xd0\xb9\xd1\x82\xd0\xb5 \xd0\xba\xd0\xb0\xd0\xbd\xd0\xb0\xd0\xbb {channel_link}. \xd0\x92 \xd1\x8d\xd1\x82\xd0\xbe\xd0\xbc \xd0\xba\xd0\xb0\xd0\xbd\xd0\xb0\xd0\xbb\xd0\xb5 \xd1\x83\xd0\xb3\xd1\x80\xd0\xbe\xd0\xb6\xd0\xb0\xd1\x8e\xd1\x82 \xd1\x80\xd0\xb0\xd1\x81\xd1\x81\xd1\x82\xd1\x80\xd0\xb5\xd0\xbb\xd0\xbe\xd0\xbc \xd0\xb4\xd0\xb5\xd1\x82\xd0\xb5\xd0\xb9 \xd0\xb2 \xd1\x88\xd0\xba\xd0\xbe\xd0\xbb\xd0\xb0\xd1\x85 \xd0\xb8 \xd1\x81\xd0\xbe\xd0\xb2\xd0\xb5\xd1\x80\xd1\x88\xd0\xb5\xd0\xbd\xd0\xb8\xd0\xb5\xd0\xbc \xd1\x82\xd0\xb5\xd1\x80\xd1\x80\xd0\xbe\xd1\x80\xd0\xb8\xd1\x81\xd1\x82\xd0\xb8\xd1\x87\xd0\xb5\xd1\x81\xd0\xba\xd0\xb8\xd1\x85 \xd0\xb0\xd0\xba\xd1\x82\xd0\xbe\xd0\xb2, \xd0\xb2\xd1\x8b \xd0\xbc\xd0\xbe\xd0\xb6\xd0\xb5\xd1\x82\xd0\xb5 \xd1\x83\xd0\xb2\xd0\xb8\xd0\xb4\xd0\xb5\xd1\x82\xd1\x8c \xd1\x8d\xd1\x82\xd0\xbe \xd0\xb7\xd0\xb4\xd0\xb5\xd1\x81\xd1\x8c {violation_link}. \xd0\x97\xd0\xb0\xd1\x80\xd0\xb0\xd0\xbd\xd0\xb5\xd0\xb5 \xd1\x81\xd0\xbf\xd0\xb0\xd1\x81\xd0\xb8\xd0\xb1\xd0\xbe.")],
            "11": [decode(b"\xd0\x97\xd0\xb4\xd1\x80\xd0\xb0\xd0\xb2\xd1\x81\xd1\x82\xd0\xb2\xd1\x83\xd0\xb9\xd1\x82\xd0\xb5, \xd0\xbf\xd0\xbe\xd0\xb4\xd0\xb4\xd0\xb5\xd1\x80\xd0\xb6\xd0\xba\xd0\xb0 \xd0\xa2\xd0\xb5\xd0\xbb\xd0\xb5\xd0\xb3\xd1\x80\xd0\xb0\xd0\xbc! \xd0\x92 \xd0\xb2\xd0\xb0\xd1\x88\xd0\xb5\xd0\xb9 \xd1\x81\xd0\xbe\xd1\x86\xd0\xb8\xd0\xb0\xd0\xbb\xd1\x8c\xd0\xbd\xd0\xbe\xd0\xb9 \xd1\x81\xd0\xb5\xd1\x82\xd0\xb8 \xd1\x8f \xd0\xbd\xd0\xb0\xd1\x88\xd0\xb5\xd0\xbb \xd0\xba\xd0\xb0\xd0\xbd\xd0\xb0\xd0\xbb, \xd0\xb2 \xd0\xba\xd0\xbe\xd1\x82\xd0\xbe\xd1\x80\xd0\xbe\xd0\xbc \xd0\xbf\xd1\x83\xd0\xb1\xd0\xbb\xd0\xb8\xd0\xba\xd1\x83\xd0\xb5\xd1\x82\xd1\x81\xd1\x8f \xd0\xbf\xd0\xbe\xd1\x80\xd0\xbd\xd0\xbe\xd0\xb3\xd1\x80\xd0\xb0\xd1\x84\xd0\xb8\xd1\x8f \xd1\x81 \xd0\xbd\xd0\xb5\xd1\x81\xd0\xbe\xd0\xb2\xd0\xb5\xd1\x80\xd1\x88\xd0\xb5\xd0\xbd\xd0\xbd\xd0\xbe\xd0\xbb\xd0\xb5\xd1\x82\xd0\xbd\xd0\xb8\xd0\xbc\xd0\xb8 \xd0\xb4\xd0\xb5\xd1\x82\xd1\x8c\xd0\xbc\xd0\xb8. \xd0\xa1\xd1\x81\xd1\x8b\xd0\xbb\xd0\xba\xd0\xb0 \xd0\xbd\xd0\xb0 \xd0\xba\xd0\xb0\xd0\xbd\xd0\xb0\xd0\xbb - {channel_link}  . \xd0\xa1\xd1\x81\xd1\x8b\xd0\xbb\xd0\xba\xd0\xb0 \xd0\xbd\xd0\xb0 \xd0\xbd\xd0\xb0\xd1\x80\xd1\x83\xd1\x88\xd0\xb5\xd0\xbd\xd0\xb8\xd0\xb5 - {violation_link} . \xd0\x9f\xd1\x80\xd0\xbe\xd1\x81\xd1\x8c\xd0\xb1\xd0\xb0 \xd1\x83\xd0\xb4\xd0\xb0\xd0\xbb\xd0\xb8\xd1\x82\xd1\x8c \xd0\xb4\xd0\xb0\xd0\xbd\xd0\xbd\xd1\x8b\xd0\xb9 \xd0\xba\xd0\xb0\xd0\xbd\xd0\xb0\xd0\xbb \xd1\x81 \xd0\xb2\xd0\xb0\xd1\x88\xd0\xb5\xd0\xb9 \xd0\xbf\xd0\xbb\xd0\xbe\xd1\x89\xd0\xb0\xd0\xb4\xd0\xba\xd0\xb8"), "Hello, Telegram support! In your social network, I found a channel posting pornography videos with children. Channel link - {channel_link} violation link - {violation_link} , please block this channel"],
            "12": [decode(b"\xd0\x97\xd0\xb4\xd1\x80\xd0\xb0\xd0\xb2\xd1\x81\xd1\x82\xd0\xb2\xd1\x83\xd0\xb9\xd1\x82\xd0\xb5, \xd0\xbf\xd0\xbe\xd0\xb4\xd0\xb4\xd0\xb5\xd1\x80\xd0\xb6\xd0\xba\xd0\xb0 \xd0\xa2\xd0\xb5\xd0\xbb\xd0\xb5\xd0\xb3\xd1\x80\xd0\xb0\xd0\xbc! \xd0\x92 \xd0\xb2\xd0\xb0\xd1\x88\xd0\xb5\xd0\xb9 \xd1\x81\xd0\xbe\xd1\x86\xd0\xb8\xd0\xb0\xd0\xbb\xd1\x8c\xd0\xbd\xd0\xbe\xd0\xb9 \xd1\x81\xd0\xb5\xd1\x82\xd0\xb8 \xd1\x8f \xd0\xbd\xd0\xb0\xd1\x88\xd0\xb5\xd0\xbb \xd0\xba\xd0\xb0\xd0\xbd\xd0\xb0\xd0\xbb, \xd0\xb2 \xd0\xba\xd0\xbe\xd1\x82\xd0\xbe\xd1\x80\xd0\xbe\xd0\xbc \xd0\xbf\xd1\x83\xd0\xb1\xd0\xbb\xd0\xb8\xd0\xba\xd1\x83\xd1\x8e\xd1\x82\xd1\x81\xd1\x8f \xd0\xbf\xd0\xbe\xd1\x81\xd1\x82\xd1\x8b \xd1\x81 \xd1\x86\xd0\xb5\xd0\xbb\xd1\x8c\xd1\x8e \xd0\xbe\xd0\xb1\xd0\xbc\xd0\xb0\xd0\xbd\xd0\xb0 \xd0\xb8 \xd0\xbc\xd0\xbe\xd1\x88\xd0\xb5\xd0\xbd\xd0\xbd\xd0\xb8\xd1\x87\xd0\xb5\xd1\x81\xd1\x82\xd0\xb2\xd0\xb0. \xd0\xa1\xd1\x81\xd1\x8b\xd0\xbb\xd0\xba\xd0\xb0 \xd0\xbd\xd0\xb0 \xd0\xba\xd0\xb0\xd0\xbd\xd0\xb0\xd0\xbb - {channel_link} . \xd0\xa1\xd1\x81\xd1\x8b\xd0\xbb\xd0\xba\xd0\xb0 \xd0\xbd\xd0\xb0 \xd0\xbd\xd0\xb0\xd1\x80\xd1\x83\xd1\x88\xd0\xb5\xd0\xbd\xd0\xb8\xd0\xb5 - {violation_link} . \xd0\x9f\xd1\x80\xd0\xbe\xd1\x81\xd1\x8c\xd0\xb1\xd0\xb0 \xd1\x83\xd0\xb4\xd0\xb0\xd0\xbb\xd0\xb8\xd1\x82\xd1\x8c \xd0\xb4\xd0\xb0\xd0\xbd\xd0\xbd\xd1\x8b\xd0\xb9 \xd0\xba\xd0\xb0\xd0\xbd\xd0\xb0\xd0\xbb \xd1\x81 \xd0\xb2\xd0\xb0\xd1\x88\xd0\xb5\xd0\xb9 \xd0\xbf\xd0\xbb\xd0\xbe\xd1\x89\xd0\xb0\xd0\xb4\xd0\xba\xd0\xb8"), "Hello, Telegram support! In your social network, I found a channel where posts aimed at deception and fraud are being published. The link to the channel is {channel_link}. The link to the violation is {violation_link}. Please remove this channel from your platform."],
            "13": [decode(b"\xd0\x97\xd0\xb4\xd1\x80\xd0\xb0\xd0\xb2\xd1\x81\xd1\x82\xd0\xb2\xd1\x83\xd0\xb9\xd1\x82\xd0\xb5, \xd0\xbf\xd0\xbe\xd0\xb4\xd0\xb4\xd0\xb5\xd1\x80\xd0\xb6\xd0\xba\xd0\xb0 telegram. \xd0\xaf \xd0\xb1\xd1\x8b \xd1\x85\xd0\xbe\xd1\x82\xd0\xb5\xd0\xbb \xd0\xbf\xd0\xbe\xd0\xb6\xd0\xb0\xd0\xbb\xd0\xbe\xd0\xb2\xd0\xb0\xd1\x82\xd1\x8c\xd1\x81\xd1\x8f \xd0\xbd\xd0\xb0 \xd1\x82\xd0\xb5\xd0\xbb\xd0\xb5\xd0\xb3\xd1\x80\xd0\xb0\xd0\xbc \xd0\xba\xd0\xb0\xd0\xbd\xd0\xb0\xd0\xbb \xd0\xbf\xd1\x80\xd0\xbe\xd0\xb4\xd0\xb0\xd1\x8e\xd1\x89\xd0\xb8\xd0\xb9 \xd0\xb2\xd0\xb8\xd1\x80\xd1\x82\xd1\x83\xd0\xb0\xd0\xbb\xd1\x8c\xd0\xbd\xd1\x8b\xd0\xb5 \xd0\xbd\xd0\xbe\xd0\xbc\xd0\xb5\xd1\x80\xd0\xb0, \xd0\xbd\xd0\xb0\xd1\x81\xd0\xba\xd0\xbe\xd0\xbb\xd1\x8c\xd0\xba\xd0\xbe \xd1\x8f \xd0\xb7\xd0\xbd\xd0\xb0\xd1\x8e \xd1\x8d\xd1\x82\xd0\xbe \xd0\xb7\xd0\xb0\xd0\xbf\xd1\x80\xd0\xb5\xd1\x89\xd0\xb5\xd0\xbd\xd0\xbe \xd0\xbf\xd1\x80\xd0\xb0\xd0\xb2\xd0\xb8\xd0\xbb\xd0\xb0\xd0\xbc\xd0\xb8 \xd0\xb2\xd0\xb0\xd1\x88\xd0\xb5\xd0\xb9 \xd0\xbf\xd0\xbb\xd0\xbe\xd1\x89\xd0\xb0\xd0\xb4\xd0\xba\xd0\xb8. \xd0\xa1\xd1\x81\xd1\x8b\xd0\xbb\xd0\xba\xd0\xb0 \xd0\xbd\xd0\xb0 \xd0\xba\xd0\xb0\xd0\xbd\xd0\xb0\xd0\xbb - {channel_link} \xd1\x81\xd1\x81\xd1\x8b\xd0\xbb\xd0\xba\xd0\xb0 \xd0\xbd\xd0\xb0 \xd0\xbd\xd0\xb0\xd1\x80\xd1\x83\xd1\x88\xd0\xb5\xd0\xbd\xd0\xb8\xd0\xb5 - {violation_link} . \xd0\xa1\xd0\xbf\xd0\xb0\xd1\x81\xd0\xb8\xd0\xb1\xd0\xbe \xd1\x87\xd1\x82\xd0\xbe \xd0\xbe\xd1\x87\xd0\xb8\xd1\x89\xd0\xb0\xd0\xb5\xd1\x82\xd0\xb5 \xd1\x81\xd0\xb2\xd0\xbe\xd1\x8e \xd0\xbf\xd0\xbb\xd0\xbe\xd1\x89\xd0\xb0\xd0\xb4\xd0\xba\xd1\x83 \xd0\xbe\xd1\x82 \xd0\xbf\xd0\xbe\xd0\xb4\xd0\xbe\xd0\xb1\xd0\xbd\xd1\x8b\xd1\x85 \xd0\xba\xd0\xb0\xd0\xbd\xd0\xb0\xd0\xbb\xd0\xbe\xd0\xb2!"), "Hello, Telegram support. I would like to report a Telegram channel selling virtual phone numbers, which as far as I know, is prohibited by your platform\'s rules. Here are the details:Channel link: {channel_link} Violation link: {violation_link} Thank you for cleansing your platform from such channels!"],
            "14": [decode(b"\xd0\x94\xd0\xbe\xd0\xb1\xd1\x80\xd0\xbe\xd0\xb3\xd0\xbe \xd0\xb2\xd1\x80\xd0\xb5\xd0\xbc\xd0\xb5\xd0\xbd\xd0\xb8 \xd1\x81\xd1\x83\xd1\x82\xd0\xbe\xd0\xba, \xd1\x83\xd0\xb2\xd0\xb0\xd0\xb6\xd0\xb0\xd0\xb5\xd0\xbc\xd0\xb0\xd1\x8f \xd0\xbf\xd0\xbe\xd0\xb4\xd0\xb4\xd0\xb5\xd1\x80\xd0\xb6\xd0\xba\xd0\xb0. \xd0\x9d\xd0\xb0 \xd0\xbf\xd1\x80\xd0\xbe\xd1\x81\xd1\x82\xd0\xbe\xd1\x80\xd0\xb0\xd1\x85 \xd0\xb2\xd0\xb0\xd1\x88\xd0\xb5\xd0\xb9 \xd0\xbf\xd0\xbb\xd0\xb0\xd1\x82\xd1\x84\xd0\xbe\xd1\x80\xd0\xbc\xd1\x8b \xd0\xbc\xd0\xbd\xd0\xb5 \xd0\xbf\xd0\xbe\xd0\xbf\xd0\xb0\xd0\xbb\xd1\x81\xd1\x8f \xd0\xba\xd0\xb0\xd0\xbd\xd0\xb0\xd0\xbb, \xd1\x80\xd0\xb0\xd1\x81\xd0\xbf\xd1\x80\xd0\xbe\xd1\x81\xd1\x82\xd1\x80\xd0\xb0\xd0\xbd\xd1\x8f\xd1\x8e\xd1\x89\xd0\xb8\xd0\xb9 \xd1\x88\xd0\xbe\xd0\xba \xd0\xba\xd0\xbe\xd0\xbd\xd1\x82\xd0\xb5\xd0\xbd\xd1\x82 \xd1\x81 \xd1\x83\xd0\xb1\xd0\xb8\xd0\xb9\xd1\x81\xd1\x82\xd0\xb2\xd0\xb0\xd0\xbc\xd0\xb8 \xd0\xbb\xd1\x8e\xd0\xb4\xd0\xb5\xd0\xb9. \xd0\xa1\xd1\x81\xd1\x8b\xd0\xbb\xd0\xba\xd0\xb0 \xd0\xbd\xd0\xb0 \xd0\xba\xd0\xb0\xd0\xbd\xd0\xb0\xd0\xbb - {channel_link} , \xd1\x81\xd1\x81\xd1\x8b\xd0\xbb\xd0\xba\xd0\xb0 \xd0\xbd\xd0\xb0 \xd0\xbd\xd0\xb0\xd1\x80\xd1\x83\xd1\x88\xd0\xb5\xd0\xbd\xd0\xb8\xd0\xb5 - {violation_link} . \xd0\x9f\xd1\x80\xd0\xbe\xd1\x81\xd1\x8c\xd0\xb1\xd0\xb0 \xd1\x83\xd0\xb4\xd0\xb0\xd0\xbb\xd0\xb8\xd1\x82\xd1\x8c \xd0\xb4\xd0\xb0\xd0\xbd\xd0\xbd\xd1\x8b\xd0\xb9 \xd0\xba\xd0\xb0\xd0\xbd\xd0\xb0\xd0\xbb, \xd1\x81\xd0\xbf\xd0\xb0\xd1\x81\xd0\xb8\xd0\xb1\xd0\xbe \xd0\xb7\xd0\xb0 \xd0\xb2\xd0\xbd\xd0\xb8\xd0\xbc\xd0\xb0\xd0\xbd\xd0\xb8\xd0\xb5."), "Good day, esteemed support team. I came across a channel on your platform that disseminates shocking content involving human fatalities. Here is the link to the channel - {channel_link}, along withthe violation link - {violation_link}. Kindly remove this channel. Thank you for your attention."],
            "15": [decode(b"\xd0\x97\xd0\xb4\xd1\x80\xd0\xb0\xd0\xb2\xd1\x81\xd1\x82\xd0\xb2\xd1\x83\xd0\xb9\xd1\x82\xd0\xb5, \xd1\x83\xd0\xb2\xd0\xb0\xd0\xb6\xd0\xb0\xd0\xb5\xd0\xbc\xd0\xb0\xd1\x8f \xd0\xbf\xd0\xbe\xd0\xb4\xd0\xb4\xd0\xb5\xd1\x80\xd0\xb6\xd0\xba\xd0\xb0. \xd0\x9d\xd0\xb0 \xd0\xb2\xd0\xb0\xd1\x88\xd0\xb5\xd0\xb9 \xd0\xbf\xd0\xbb\xd0\xb0\xd1\x82\xd1\x84\xd0\xbe\xd1\x80\xd0\xbc\xd0\xb5 \xd1\x8f \xd0\xbd\xd0\xb0\xd1\x88\xd0\xb5\xd0\xbb \xd0\xba\xd0\xb0\xd0\xbd\xd0\xb0\xd0\xbb \xd0\xba\xd0\xbe\xd1\x82\xd0\xbe\xd1\x80\xd1\x8b\xd0\xb9 \xd0\xb2\xd1\x8b\xd0\xba\xd0\xbb\xd0\xb0\xd0\xb4\xd1\x8b\xd0\xb2\xd0\xb0\xd0\xb5\xd1\x82 \xd0\xb6\xd0\xb5\xd1\x81\xd1\x82\xd0\xbe\xd0\xba\xd0\xbe\xd0\xb5 \xd0\xbe\xd0\xb1\xd1\x80\xd0\xb0\xd1\x89\xd0\xb5\xd0\xbd\xd0\xb8\xd0\xb5 \xd1\x81 \xd0\xb6\xd0\xb8\xd0\xb2\xd0\xbe\xd1\x82\xd0\xbd\xd1\x8b\xd0\xbc\xd0\xb8. \xd0\xa1\xd1\x81\xd1\x8b\xd0\xbb\xd0\xba\xd0\xb0 \xd0\xbd\xd0\xb0 \xd0\xba\xd0\xb0\xd0\xbd\xd0\xb0\xd0\xbb - {channel_link} \xd1\x81\xd1\x81\xd1\x8b\xd0\xbb\xd0\xba\xd0\xb0 \xd0\xbd\xd0\xb0 \xd0\xbd\xd0\xb0\xd1\x80\xd1\x83\xd1\x88\xd0\xb5\xd0\xbd\xd0\xb8\xd0\xb5 - {violation_link}. \xd0\xa1\xd0\xbf\xd0\xb0\xd1\x81\xd0\xb8\xd0\xb1\xd0\xbe \xd0\xb7\xd0\xb0 \xd1\x82\xd0\xbe \xd1\x87\xd1\x82\xd0\xbe \xd0\xb4\xd0\xb5\xd0\xbb\xd0\xb0\xd0\xb5\xd1\x82\xd0\xb5 \xd1\x82\xd0\xb5\xd0\xbb\xd0\xb5\xd0\xb3\xd1\x80\xd0\xb0\xd0\xbc \xd1\x87\xd0\xb8\xd1\x89\xd0\xb5."), "Hello, dear support. I found a channel postingcruelty to animals. Channel link - {channel_link} , violation links - {violation_link} Thank you"],

        }

        if complaint_type not in complaint_types:
            print(decode(b"\xd0\x9d\xd0\xb5\xd0\xba\xd0\xbe\xd1\x80\xd1\x80\xd0\xb5\xd0\xba\xd1\x82\xd0\xbd\xd1\x8b\xd0\xb9 \xd0\xb2\xd1\x8b\xd0\xb1\xd0\xbe\xd1\x80."))
        else:
            complaint_texts = complaint_types[complaint_type]
            channel_link = input(decode(b"\xd0\xa1\xd1\x81\xd1\x8b\xd0\xbb\xd0\xba\xd0\xb0 \xd0\xbd\xd0\xb0 \xd0\xba\xd0\xb0\xd0\xbd\xd0\xb0\xd0\xbb: "))
            violation_link = input(decode(b"\xd0\xa1\xd1\x81\xd1\x8b\xd0\xbb\xd0\xba\xd0\xb0 \xd0\xbd\xd0\xb0 \xd0\xbd\xd0\xb0\xd1\x80\xd1\x83\xd1\x88\xd0\xb5\xd0\xbd\xd0\xb8\xd0\xb5: "))

            for sender_email, sender_password in senders.items():
                for receiver_email in random.sample(receivers, min(2, len(receivers))):
                    complaint_body = complaint_texts[0].format(channel_link=channel_link.strip(), violation_link=violation_link.strip())
                    send_email(receiver_email, sender_email, sender_password, "\xd0\x96\xd0\xb0\xd0\xbb\xd0\xbe\xd0\xb1\xd0\xb0 \xd0\xbd\xd0\xb0 \xd0\xba\xd0\xb0\xd0\xbd\xd0\xb0\xd0\xbb \xd0\xb2 Telegram", complaint_body)
                    print(decode(b"\xd0\x9e\xd1\x82\xd0\xbf\xd1\x80\xd0\xb0\xd0\xb2\xd0\xbb\xd0\xb5\xd0\xbd\xd0\xbe \xd0\xbd\xd0\xb0 ") + receiver_email)
                    sent_emails += 1
            # \xd0\x9e\xd1\x82\xd0\xbf\xd1\x80\xd0\xb0\xd0\xb2\xd0\xba\xd0\xb0 \xd0\xbf\xd0\xb8\xd1\x81\xd0\xb5\xd0\xbc \xd0\xbd\xd0\xb0 \xd0\xb0\xd0\xbd\xd0\xb3\xd0\xbb\xd0\xb8\xd0\xb9\xd1\x81\xd0\xba\xd0\xbe\xd0\xbc
            if len(complaint_texts) > 1:
                for sender_email, sender_password in senders.items():
                    for receiver_email in random.sample(receivers, min(2, len(receivers))):
                        complaint_body = complaint_texts[1].format(channel_link=channel_link.strip(), violation_link=violation_link.strip())
                        send_email(receiver_email, sender_email, sender_password, "Complaint about a channel in Telegram", complaint_body)
                        print(f"Sent to {receiver_email}!")
                        sent_emails += 1
        print(decode(b"\xd0\x9e\xd1\x82\xd0\xbf\xd1\x80\xd0\xb0\xd0\xb2\xd0\xbb\xd0\xb5\xd0\xbd\xd0\xbe!"))

    elif choice == "3":
        print(decode(b"3.1 \xd0\x93\xd0\xb1"))
        print(decode(b"3.2 \xd0\x9f\xd1\x80\xd0\xb0\xd0\xb9\xd1\x81\xd1\x8b \xd0\xb2 \xd0\xb1\xd0\xbe\xd1\x82\xd0\xb0\xd1\x85 (\xd0\x91\xd0\x95\xd0\xa2\xd0\x90)"))
        print(decode(b"3.3 \xd0\x9b\xd1\x8e\xd0\xb1\xd0\xbe\xd0\xb9 \xd0\xb1\xd0\xbe\xd1\x82 \xd0\xb4\xd0\xbb\xd1\x8f \xd0\xb4\xd0\xbe\xd0\xba\xd1\x81\xd0\xb0"))
        complaint_type = input(decode(b"\xd0\x92\xd1\x8b\xd0\xb1\xd0\xbe\xd1\x80: "))

    complaint_types = {
        "3.1": decode(b"\xd0\x97\xd0\xb4\xd1\x80\xd0\xb0\xd0\xb2\xd1\x81\xd1\x82\xd0\xb2\xd1\x83\xd0\xb9\xd1\x82\xd0\xb5, \xd1\x83\xd0\xb2\xd0\xb0\xd0\xb6\xd0\xb0\xd0\xb5\xd0\xbc\xd0\xb0\xd1\x8f \xd0\xbf\xd0\xbe\xd0\xb4\xd0\xb4\xd0\xb5\xd1\x80\xd0\xb6\xd0\xba\xd0\xb0 \xd1\x82\xd0\xb5\xd0\xbb\xd0\xb5\xd0\xb3\xd1\x80\xd0\xb0\xd0\xbc. \xd0\x92 \xd0\xb2\xd0\xb0\xd1\x88\xd0\xb5\xd0\xb9 \xd1\x81\xd0\xb5\xd1\x82\xd0\xb8 \xd1\x8f \xd0\xbd\xd0\xb0\xd1\x88\xd0\xb5\xd0\xbb \xd0\xb1\xd0\xbe\xd1\x82\xd0\xb0, \xd0\xba\xd0\xbe\xd1\x82\xd0\xbe\xd1\x80\xd1\x8b\xd0\xb9 \xd0\xbf\xd1\x80\xd0\xb5\xd0\xb4\xd0\xbe\xd1\x81\xd1\x82\xd0\xb0\xd0\xb2\xd0\xbb\xd1\x8f\xd0\xb5\xd1\x82 \xd0\xb7\xd0\xb0\xd0\xbf\xd1\x80\xd0\xb5\xd1\x89\xd0\xb5\xd0\xbd\xd0\xbd\xd1\x8b\xd0\xb5 \xd1\x83\xd1\x81\xd0\xbb\xd1\x83\xd0\xb3\xd0\xb8, \xd1\x82\xd0\xb0\xd0\xba\xd0\xb8\xd0\xb5 \xd0\xba\xd0\xb0\xd0\xba \xd0\xb4\xd0\xbe\xd0\xba\xd1\x81\xd0\xb8\xd0\xbd\xd0\xb3 (\xd0\xbf\xd0\xbe\xd0\xb8\xd1\x81\xd0\xba \xd0\xb8\xd0\xbd\xd1\x84\xd0\xbe\xd1\x80\xd0\xbc\xd0\xb0\xd1\x86\xd0\xb8\xd0\xb8). \xd0\xa1\xd1\x81\xd1\x8b\xd0\xbb\xd0\xba\xd0\xb0 \xd0\xbd\xd0\xb0 \xd0\xb1\xd0\xbe\xd1\x82\xd0\xb0 - {bot_link}. \xd0\x9f\xd1\x80\xd0\xbe\xd1\x81\xd1\x8c\xd0\xb1\xd0\xb0 \xd1\x83\xd0\xb4\xd0\xb0\xd0\xbb\xd0\xb8\xd1\x82\xd1\x8c \xd0\xb4\xd0\xb0\xd0\xbd\xd0\xbd\xd0\xbe\xd0\xb3\xd0\xbe \xd0\xb1\xd0\xbe\xd1\x82\xd0\xb0 \xd1\x81 \xd0\xb2\xd0\xb0\xd1\x88\xd0\xb5\xd0\xb9 \xd0\xbf\xd0\xbb\xd0\xb0\xd1\x82\xd1\x84\xd0\xbe\xd1\x80\xd0\xbc\xd1\x8b."),
        "3.2": decode(b"\xd0\x97\xd0\xb4\xd1\x80\xd0\xb0\xd0\xb2\xd1\x81\xd1\x82\xd0\xb2\xd1\x83\xd0\xb9\xd1\x82\xd0\xb5, \xd1\x83\xd0\xb2\xd0\xb0\xd0\xb6\xd0\xb0\xd0\xb5\xd0\xbc\xd0\xb0\xd1\x8f \xd0\xbf\xd0\xbe\xd0\xb4\xd0\xb4\xd0\xb5\xd1\x80\xd0\xb6\xd0\xba\xd0\xb0. \xd0\x9d\xd0\xb0 \xd0\xbf\xd1\x80\xd0\xbe\xd1\x81\xd1\x82\xd0\xbe\xd1\x80\xd0\xb0\xd1\x85 \xd1\x82\xd0\xb5\xd0\xbb\xd0\xb5\xd0\xb3\xd1\x80\xd0\xb0\xd0\xbc \xd1\x8f \xd0\xb7\xd0\xb0\xd0\xbc\xd0\xb5\xd1\x82\xd0\xb8\xd0\xbb \xd0\xb1\xd0\xbe\xd1\x82\xd0\xb0, \xd0\xba\xd0\xbe\xd1\x82\xd0\xbe\xd1\x80\xd1\x8b\xd0\xb9 \xd0\xbf\xd1\x80\xd0\xb5\xd0\xb4\xd0\xbe\xd1\x81\xd1\x82\xd0\xb0\xd0\xb2\xd0\xbb\xd1\x8f\xd0\xb5\xd1\x82 \xd0\xbf\xd0\xbe\xd0\xba\xd1\x83\xd0\xbf\xd0\xba\xd1\x83 \xd1\x83\xd1\x81\xd0\xbb\xd1\x83\xd0\xb3 \xd0\xb4\xd0\xbe\xd0\xba\xd1\x81\xd0\xb8\xd0\xbd\xd0\xb3\xd0\xb0 \xd0\xb8 \xd1\x81\xd0\xb2\xd0\xb0\xd1\x82\xd1\x82\xd0\xb8\xd0\xbd\xd0\xb3\xd0\xb0. \xd0\xa1\xd1\x81\xd1\x8b\xd0\xbb\xd0\xba\xd0\xb0 \xd0\xbd\xd0\xb0 \xd0\xb1\xd0\xbe\xd1\x82\xd0\xb0 - {bot_link}. \xd0\x9f\xd1\x80\xd0\xbe\xd1\x81\xd1\x8c\xd0\xb1\xd0\xb0 \xd0\xb7\xd0\xb0\xd0\xb1\xd0\xbb\xd0\xbe\xd0\xba\xd0\xb8\xd1\x80\xd0\xbe\xd0\xb2\xd0\xb0\xd1\x82\xd1\x8c \xd0\xb4\xd0\xb0\xd0\xbd\xd0\xbd\xd0\xbe\xd0\xb3\xd0\xbe \xd0\xb1\xd0\xbe\xd1\x82\xd0\xb0."),
        "3.3": decode(b"\xd0\x97\xd0\xb4\xd1\x80\xd0\xb0\xd0\xb2\xd1\x81\xd1\x82\xd0\xb2\xd1\x83\xd0\xb9\xd1\x82\xd0\xb5, \xd1\x83\xd0\xb2\xd0\xb0\xd0\xb6\xd0\xb0\xd0\xb5\xd0\xbc\xd0\xb0\xd1\x8f \xd0\xbf\xd0\xbe\xd0\xb4\xd0\xb4\xd0\xb5\xd1\x80\xd0\xb6\xd0\xba\xd0\xb0 \xd1\x82\xd0\xb5\xd0\xbb\xd0\xb5\xd0\xb3\xd1\x80\xd0\xb0\xd0\xbc. \xd0\x92 \xd0\xb2\xd0\xb0\xd1\x88\xd0\xb5\xd0\xb9 \xd1\x81\xd0\xb5\xd1\x82\xd0\xb8 \xd1\x8f \xd0\xbd\xd0\xb0\xd1\x88\xd0\xb5\xd0\xbb \xd0\xb1\xd0\xbe\xd1\x82\xd0\xb0, \xd0\xba\xd0\xbe\xd1\x82\xd0\xbe\xd1\x80\xd1\x8b\xd0\xb9 \xd0\xbf\xd1\x80\xd0\xb5\xd0\xb4\xd0\xbe\xd1\x81\xd1\x82\xd0\xb0\xd0\xb2\xd0\xbb\xd1\x8f\xd0\xb5\xd1\x82 \xd0\xb7\xd0\xb0\xd0\xbf\xd1\x80\xd0\xb5\xd1\x89\xd0\xb5\xd0\xbd\xd0\xbd\xd1\x8b\xd0\xb5 \xd1\x83\xd1\x81\xd0\xbb\xd1\x83\xd0\xb3\xd0\xb8, \xd1\x82\xd0\xb0\xd0\xba\xd0\xb8\xd0\xb5 \xd0\xba\xd0\xb0\xd0\xba \xd0\xb4\xd0\xbe\xd0\xba\xd1\x81\xd0\xb8\xd0\xbd\xd0\xb3 (\xd0\xbf\xd0\xbe\xd0\xb8\xd1\x81\xd0\xba \xd0\xb8\xd0\xbd\xd1\x84\xd0\xbe\xd1\x80\xd0\xbc\xd0\xb0\xd1\x86\xd0\xb8\xd0\xb8). \xd0\xa1\xd1\x81\xd1\x8b\xd0\xbb\xd0\xba\xd0\xb0 \xd0\xbd\xd0\xb0 \xd0\xb1\xd0\xbe\xd1\x82\xd0\xb0 - {bot_link}. \xd0\x9f\xd1\x80\xd0\xbe\xd1\x81\xd1\x8c\xd0\xb1\xd0\xb0 \xd1\x83\xd0\xb4\xd0\xb0\xd0\xbb\xd0\xb8\xd1\x82\xd1\x8c \xd0\xb4\xd0\xb0\xd0\xbd\xd0\xbd\xd0\xbe\xd0\xb3\xd0\xbe \xd0\xb1\xd0\xbe\xd1\x82\xd0\xb0 \xd1\x81 \xd0\xb2\xd0\xb0\xd1\x88\xd0\xb5\xd0\xb9 \xd0\xbf\xd0\xbb\xd0\xb0\xd1\x82\xd1\x84\xd0\xbe\xd1\x80\xd0\xbc\xd1\x8b.")
    }

    if complaint_type not in complaint_types:
        print(decode(b"\xd0\x9d\xd0\xb5\xd0\xba\xd0\xbe\xd1\x80\xd1\x80\xd0\xb5\xd0\xba\xd1\x82\xd0\xbd\xd1\x8b\xd0\xb9 \xd0\xb2\xd1\x8b\xd0\xb1\xd0\xbe\xd1\x80."))
    else:
        complaint_texts = complaint_types[complaint_type]
        bot_username = input(decode(b"\xd0\xae\xd0\xb7\xd0\xb5\xd1\x80\xd0\xbd\xd0\xb5\xd0\xb9\xd0\xbc \xd0\xb1\xd0\xbe\xd1\x82\xd0\xb0: "))
        for sender_email, sender_password in senders.items():
            for receiver_email in random.sample(receivers, min(2, len(receivers))):
                complaint_body = complaint_texts.format(bot_link=bot_username.strip())
                send_email(receiver_email, sender_email, sender_password, "\xd0\x96\xd0\xb0\xd0\xbb\xd0\xbe\xd0\xb1\xd0\xb0 \xd0\xbd\xd0\xb0 \xd0\xb1\xd0\xbe\xd1\x82\xd0\xb0 \xd0\xb2 Telegram", complaint_body)
                print(decode(b"\xd0\x9e\xd1\x82\xd0\xbf\xd1\x80\xd0\xb0\xd0\xb2\xd0\xbb\xd0\xb5\xd0\xbd\xd0\xbe \xd0\xbd\xd0\xb0 ") + receiver_email)
                sent_emails += 1
                
        def send_request(i):
            user_agent = random.select(user_agents)
            headers = {"User-Agent": user_agent}
            try:
                response = requests.get(url, headers=headers)
                print(f"{colorama.Fore.green}[+] Request {i} sent successfully\n")
            except:
                print(f"{colorama.Fore.green}[+] Request {i} sent successfully\n")
        threads = []
        for i in range(1, num_requests + 1):
            t = threading.Thread(target=send_request, args=[i])
            t.start()
            threads.append(t)
        for t in threads:
            t.join()         

if __name__ == "__main__":
    handle_complaint(senders, receivers)